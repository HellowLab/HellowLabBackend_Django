"""
Django settings for HellowLab project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
load_dotenv()

# SECURITY WARNING: don't run with debug turned on in production!
# default value for production is set to False
DEBUG = os.getenv('DEBUG', 'False').lower() == 'true'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-lyx6a7p7p59(g6j)uia#-i8f26708^q8%_lz*sb7kn)@k(^di!')

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'hellowlab.com,www.hellowlab.com,dnekcab.hellowlab.com,146.190.185.97').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third-party apps
    "corsheaders",
    "rest_framework",
    "rest_framework.authtoken",
    "rest_framework_simplejwt",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",  # add if you want social authentication
    "dj_rest_auth",
    "dj_rest_auth.registration",
    # 'django.contrib.sites',

    # Local apps
    'dblfeature',
    "authentication.apps.AuthenticationConfig", 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HellowLab.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates', 
            BASE_DIR / 'allauth',
            BASE_DIR / 'templates' / 'account'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'HellowLab.wsgi.application'

AUTH_USER_MODEL = 'authentication.CustomUser'

# Database configuration
if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": 'hellowlab_db',
            "USER": os.getenv('DJANGO_DB_USER', 'admin'),
            "PASSWORD": os.getenv('DJANGO_DB_PASSWORD', 'password'),
            "HOST": 'hellowlab_db',
            "PORT": '5432',
        }
    }

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST Framework settings
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ]
}

# JWT Configuration
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=2),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=365),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": True,
    "JWT_SIGNING_KEY": os.getenv('JWT_SIGNING_KEY', 'c2b1091813186725bb6d86f6a3517126e0f1f3010033c8c581f5d9adfaa6c867bc784ec3a69e6d28f92b0ea6f17b980d3017a9af27176d89ade6c25896f7835c'),
    "ALGORITHM": "HS512",
}

SITE_ID = 1  # Ensure SITE_ID is set

# Django AllAuth settings
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "optional"

# Email settings
EMAIL_BACKEND_DEFAULT = 'django.core.mail.backends.console.EmailBackend' if DEBUG else 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_BACKEND = os.getenv('EMAIL_BACKEND', EMAIL_BACKEND_DEFAULT) # if var is not in .env, use default value based on debug mode
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', 'UsEaNeNvIrOnMeNtVaRiAbLe')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'UsEaNeNvIrOnMeNtVaRiAbLe')

EMAIL_CONFIRM_REDIRECT_BASE_URL = "http://localhost:3000/login/email/confirm/"
PASSWORD_RESET_CONFIRM_REDIRECT_BASE_URL = "http://localhost:3000/login/password-reset/confirm/"

REST_AUTH = {
    "USE_JWT": True,
    "JWT_AUTH_HTTPONLY": False,
    "PASSWORD_RESET_SERIALIZER": "dj_rest_auth.serializers.PasswordResetSerializer",
}

CSRF_TRUSTED_ORIGINS = ['https://hellowlab.com', 'https://www.hellowlab.com', 'https://dnekcab.hellowlab.com', 'https://integration.hellowlab.com', 'http://localhost:8000']

CORS_ALLOW_ALL_ORIGINS = DEBUG
CORS_ALLOW_CREDENTIALS = not DEBUG

ACCOUNT_ADAPTER = 'authentication.adapter.DefaultAccountAdapterCustom'
SITE_NAME = 'HellowLab'

URL_FRONT = os.getenv('URL_FRONT', 'https://HellowLab.com/')

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'